name: Release Artifact

on:
  workflow_run:
    workflows: ["Build_oneplus_sm8750"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      run-id:
        description: '特定工作流运行的ID（可选）'
        required: false

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # 获取运行ID（自动或手动）
      - name: Resolve Workflow Run ID
        id: resolve_run_id
        run: |
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            echo "run_id=${{ github.event.workflow_run.id }}" >> $GITHUB_OUTPUT
          elif [ -n "${{ github.event.inputs.run-id }}" ]; then
            echo "run_id=${{ github.event.inputs.run-id }}" >> $GITHUB_OUTPUT
          else
            # 获取最近成功运行的ID
            echo "run_id=$(gh api "repos/$GITHUB_REPOSITORY/actions/workflows/Build_oneplus_sm8750.yml/runs?status=success&per_page=1" -q '.workflow_runs[0].id')" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 获取产物信息
      - name: Get Artifact Metadata
        id: get_artifact
        run: |
          artifact_info=$(gh api "repos/$GITHUB_REPOSITORY/actions/runs/${{ steps.resolve_run_id.outputs.run_id }}/artifacts" \
            -q '.artifacts[0]')
          
          artifact_name=$(jq -r '.name' <<< "$artifact_info")
          download_url=$(jq -r '.archive_download_url' <<< "$artifact_info")
          release_title=$(basename -s .zip "$artifact_name")
          
          echo "artifact_name=$artifact_name" >> $GITHUB_OUTPUT
          echo "download_url=$download_url" >> $GITHUB_OUTPUT
          echo "release_title=$release_title" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 下载产物
      - name: Download Artifact
        run: |
          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -o "${{ steps.get_artifact.outputs.artifact_name }}" \
            "${{ steps.get_artifact.outputs.download_url }}"

      # 创建Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: release-${{ github.run_id }}
          release_name: ${{ steps.get_artifact.outputs.release_title }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 上传产物到Release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.get_artifact.outputs.artifact_name }}
          asset_name: ${{ steps.get_artifact.outputs.artifact_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
